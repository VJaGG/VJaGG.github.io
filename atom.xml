<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WZQiang&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-11T03:12:22.098Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>你们跌倒了mei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cs231n assignment3</title>
    <link href="http://yoursite.com/2020/07/11/cs231n-assignment3/"/>
    <id>http://yoursite.com/2020/07/11/cs231n-assignment3/</id>
    <published>2020-07-11T03:06:08.000Z</published>
    <updated>2020-07-11T03:12:22.098Z</updated>
    
    <content type="html"><![CDATA[<p>作业三一共有三个问题</p><h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><h3 id="Download-data"><a href="#Download-data" class="headerlink" title="Download data:"></a>Download data:</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> cs231n/datasets</span><br><span class="line">./get_assignment3_data.sh</span><br></pre></td></tr></table></figure><h3 id="Q1-Image-Captioning-with-Vanilla-RNNs-25-points"><a href="#Q1-Image-Captioning-with-Vanilla-RNNs-25-points" class="headerlink" title="Q1: Image Captioning with Vanilla RNNs (25 points)"></a>Q1: Image Captioning with Vanilla RNNs (25 points)</h3><p>The Jupyter notebook <code>RNN_Captioning.ipynb</code> will walk you through the<br>implementation of an image captioning system on MS-COCO using vanilla recurrent<br>networks.</p><h3 id="Q2-Image-Captioning-with-LSTMs-30-points"><a href="#Q2-Image-Captioning-with-LSTMs-30-points" class="headerlink" title="Q2: Image Captioning with LSTMs (30 points)"></a>Q2: Image Captioning with LSTMs (30 points)</h3><p>The Jupyter notebook <code>LSTM_Captioning.ipynb</code> will walk you through the<br>implementation of Long-Short Term Memory (LSTM) RNNs, and apply them to image<br>captioning on MS-COCO.</p><h3 id="Q3-Network-Visualization-Saliency-maps-Class-Visualization-and-Fooling-Images-15-points"><a href="#Q3-Network-Visualization-Saliency-maps-Class-Visualization-and-Fooling-Images-15-points" class="headerlink" title="Q3: Network Visualization: Saliency maps, Class Visualization, and Fooling Images (15 points)"></a>Q3: Network Visualization: Saliency maps, Class Visualization, and Fooling Images (15 points)</h3><p>The Jupyter notebooks <code>NetworkVisualization-TensorFlow.ipynb</code> /<code>NetworkVisualization-PyTorch.ipynb</code> will introduce the pretrained SqueezeNet model, compute gradients<br>with respect to images, and use them to produce saliency maps and fooling<br>images. Please complete only one of the notebooks (TensorFlow or PyTorch). No extra credit will be awardeded if you complete both notebooks.</p><h3 id="Q4-Style-Transfer-15-points"><a href="#Q4-Style-Transfer-15-points" class="headerlink" title="Q4: Style Transfer (15 points)"></a>Q4: Style Transfer (15 points)</h3><p>In the Jupyter notebooks <code>StyleTransfer-TensorFlow.ipynb</code>/<code>StyleTransfer-PyTorch.ipynb</code> you will learn how to create images with the content of one image but the style of another. Please complete only one of the notebooks (TensorFlow or PyTorch). No extra credit will be awardeded if you complete both notebooks.</p><h3 id="Q5-Generative-Adversarial-Networks-15-points"><a href="#Q5-Generative-Adversarial-Networks-15-points" class="headerlink" title="Q5: Generative Adversarial Networks (15 points)"></a>Q5: Generative Adversarial Networks (15 points)</h3><p>In the Jupyter notebooks <code>GANS-TensorFlow.ipynb</code>/<code>GANS-PyTorch.ipynb</code> you will learn how to generate images that match a training dataset, and use these models to improve classifier performance when training on a large amount of unlabeled data and a small amount of labeled data. Please complete only one of the notebooks (TensorFlow or PyTorch). No extra credit will be awarded if you complete both notebooks.</p><h3 id="Submitting-your-work"><a href="#Submitting-your-work" class="headerlink" title="Submitting your work"></a>Submitting your work</h3><p><strong>Important:</strong> <em>Please make sure that the submitted notebooks have been run and saved, and the cell outputs are visible on your pdfs.</em> In addition, please <em>do not use the Web AFS interface</em> to retrieve your pdfs, and rely on scp directly.</p><p>There are <strong><em>two</em></strong> steps to submitting your assignment:</p><p><strong>1.</strong> Run the provided <code>collectSubmission_*.sh</code> script in the <code>assignment3</code> directory, depending on which version (TensorFlow/PyTorch) you intend to submit.</p><p>You will be prompted for your SunetID (e.g. <code>jdoe</code>) and will need to provide your Stanford password. This script will generate a zip file of your code, submit your source code to Stanford AFS, and generate a pdf <code>a3.pdf</code> in a <code>cs231n-2019-assignment3/</code> folder in your AFS home directory. </p><p>If your submission for this step was successful, you should see a display message </p><p><code>### Code submitted at [TIME], [N] submission attempts remaining. ###</code></p><p><strong>2.</strong> Download the generated <code>a3.pdf</code> from AFS, then submit the pdf to Gradescope.<br>Again, do NOT use Web AFS to retrieve this file, and instead use the following scp command.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># replace DEST_PATH with where you want the pdf to be downloaded to.</span></span><br><span class="line">scp YOUR_SUNET@myth.stanford.edu:cs231n-2019-assignment3/a3.pdf DEST_PATH/a3.pdf</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作业三一共有三个问题&lt;/p&gt;
&lt;h2 id=&quot;Setup&quot;&gt;&lt;a href=&quot;#Setup&quot; class=&quot;headerlink&quot; title=&quot;Setup&quot;&gt;&lt;/a&gt;Setup&lt;/h2&gt;&lt;h3 id=&quot;Download-data&quot;&gt;&lt;a href=&quot;#Download-d
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>hello world</title>
    <link href="http://yoursite.com/2020/07/10/hello-world/"/>
    <id>http://yoursite.com/2020/07/10/hello-world/</id>
    <published>2020-07-10T13:52:31.640Z</published>
    <updated>2020-07-11T03:13:27.168Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome作业 to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome作业 to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hex
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
